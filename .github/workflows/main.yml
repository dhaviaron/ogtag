name: CI

on:
  push:
    branches: [ master ]
  
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
          
      # Instalar as dependÃªncias NPM/Yarn
      - name: Install dependencies
        run: yarn
      
      # Executar a build
      - name: Run build
        run: yarn build
      
      - name: Teste
        run: echo "${{ secrets.SSH_KEY }}" - "${{ secrets.SSH_HOST }}" - "${{ secrets.SSH_USER }}" - "${{ secrets.SSH_PORT }}"
      
      # Copiar pasta dist para dentro da Digital Ocean/AWS 
      - name: Copy dist to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: ".,!node_modules"
          target: "~/app/ogtag"
          
      # Yarn + restart server pm2
      - name: Install dependencies on server - yarn/restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY}}
          script: |
            cd ~/app/ogtag
            yarn
            pm2 restart fael-api
